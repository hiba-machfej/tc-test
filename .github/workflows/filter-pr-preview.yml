name: Check AWS Amplify PR Preview Link

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-preview-link:
    runs-on: ubuntu-latest

    steps:
      - name: Get Amplify preview URL from comment
        id: get-preview-url
        uses: actions/github-script@v6
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Find a comment that starts with "aws-amplify" and contains a URL
            const amplifyComment = comments.find(comment => comment.body.startsWith("aws-amplify"));
            if (!amplifyComment) {
              core.setFailed("No Amplify preview URL found in comments.");
              return;
            }

            // Extract URL from the comment
            const urlMatch = amplifyComment.body.match(/https?:\/\/[^\s]+/);
            if (!urlMatch) {
              core.setFailed("Amplify preview URL not found in the comment.");
              return;
            }
            
            // Set the URL as an output variable
            core.setOutput("preview_url", urlMatch[0]);

      - name: Check preview link status
        id: check-preview
        run: |
          # Use the preview URL from the previous step
          PREVIEW_URL="${{ steps.get-preview-url.outputs.preview_url }}"

          # Get the HTTP status code of the preview URL
          HTTP_STATUS=$(curl -o /dev/null -s -w "%{http_code}" $PREVIEW_URL)

          # Set output based on the HTTP status code
          if [ "$HTTP_STATUS" -eq "200" ]; then
            echo "::set-output name=link_status::active"
          else
            echo "::set-output name=link_status::broken"
          fi

      - name: Delete or notify if preview link is broken
        uses: actions/github-script@v6
        if: steps.check-preview.outputs.link_status == 'broken'
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            // Find the original "aws-amplify" comment with the preview link
            const amplifyComment = comments.find(comment => comment.body.startsWith("aws-amplify"));

            if (amplifyComment) {
              // Delete the comment if link is broken
              await github.rest.issues.deleteComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: amplifyComment.id,
              });
            }

            // Post a new comment about the broken link
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "⚠️ The AWS Amplify PR preview link is broken and not accessible.",
            });
